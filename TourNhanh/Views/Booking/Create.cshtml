@model TourNhanh.Models.Booking

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
     .section {
        padding: 50px 0 100px;
    }
    .section a {
        color: var(--bs-linear-color);
        font-weight: 600;
    }
    .section .btn.btn-light:hover a {
        color: #fff;
    }
</style>


<!-- BREADCRUMB START-->

<div class="container-fluid bg-breadcrumb">
    <div class="container text-center py-5" style="max-width: 900px;">
        <h3 class="text-white display-3 mb-4">
            Booking Tour
        </h3>
        <ol class="breadcrumb justify-content-center mb-0">
            <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Trang chủ</a></li>
            <li class="breadcrumb-item"><a href="~/Tour/Index">Danh sách tour</a></li>
            <li class="breadcrumb-item active text-white">Trang đặt tour</li>
        </ol>
    </div>
</div>

<!-- /BREADCRUMB END -->


<section class="section">
    <div class="container">
        <div class="row">
             <div class="billing-details">
                <h2 class="title-gradient text-center">Điền thông tin đặt tour</h2>
            </div>
            <div class="col-md-6 mx-auto">
                <form asp-action="Create" method="post" id="formBooking" >
                    <div class="row g-3">
                        <input type="hidden" name="tourId" value="@ViewBag.TourId" />
                                   
                        <div class="col-12">
                             <div class="form-floating">
                                
                                <input type="number" name="quantity" id="quantity" class="form-control" required
                                       min="1" max="@ViewBag.MaxCap" oninput="validateQuantity()" 
                                       placeholder="Số người"/>
                                 <label for="quantity">Số người</label>
                            </div>
                        </div>
                        <div class="col-12">
                             <div class="form-floating">
                               
                                <select name="paymentMethod" id="paymentMethod" class="form-control" required>
                                    <option value="online">Thanh toán online</option>
                                    <option value="offline">Thanh toán trực tiếp</option>
                                </select>
                                 <label for="paymentMethod">Phương thức thanh toán</label>
                            </div>
                        </div>
                        <div class="col-12">
                             <div class="form-floating">
                               
                                <span id="Amount" class="form-control"></span>
                                 <label for="Amount" class="control-label">Giá </label>
                            </div>
                        </div>
                        <div class="col-12">
                           <div class="form-floating">                              
                               <textarea name="note" id="note" class="form-control" placeholder="Ghi chú" style="height: 80px"></textarea>
                                 <label for="note">Ghi chú</label>
                            </div>
                        </div

                       <div class="col-12">
                            <button onclick="showSuccessToast();" id="bookNow"  data-tourId="@ViewBag.TourId" class="btn btn-primary btn--success w-100 py-3">Đặt ngay</button>
                       </div>
                        <div class="col-12">
                           <button class="btn btn-light w-100 py-3 mt-4"><a asp-controller="Tour" class="f-w-600" asp-action="Details" asp-route-id="@ViewBag.TourId">Trở về</a></button>
                       </div>
                    </div>

                </form>
            </div>     
         </div>
    </div>
 </section>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    let paymentMethodValue = "";
    document.getElementById('paymentMethod').addEventListener("change", function(){
        paymentMethodValue = this.value;
        console.log("paymentMethodValue", paymentMethodValue);
    });

    let noteValue  = "";
    document.getElementById('note').addEventListener("change", function(){
        noteValue = this.value;
        console.log("noteValue", noteValue);
    });

    let amountValue = 0;
    document.getElementById('Amount').addEventListener("change", function(){
        amountValue = this.value * 1;
        console.log( "amount" ,amountValue);
    });

    let quantityValue = 0;
    document.getElementById('quantity').addEventListener("change", function(){
        quantityValue = this.value * 1;    
        console.log("quantity",  quantityValue);
    });

    let idTourValue = document.getElementById("tourID").value;
    console.log("idTourValue", idTourValue);
    var tourId1 = idTourValue;
   $(document).ready(function () {
        $('#formBooking').submit(function (e) {
            e.preventDefault(); // Ngăn chặn hành động mặc định của form

            var tourId = tourId1;
            var quantity = quantityValue;
            var paymentMethod = paymentMethodValue;
            var note = noteValue;
            
            $.ajax({
                type: 'POST',
                url: 'Booking/YourTour',
                data: {
                    tourId: tourId,
                    quantity: quantity,
                    paymentMethod: paymentMethod,
                    note: note
                },
                async: false,
                success: function (response) {
                    console.log("thanh cong");
                   showSuccessToast();
                   // Hiển thị thông báo toast tại đây
                },
                error: function (xhr, status, error) {
                    // Xử lý lỗi nếu có
                    console.log("loi!!!!")
                    showErrorToast();
                }
            });
        })
    });
</script>
<script>


   
    const price = @ViewBag.Price;
    const maxCap = @ViewBag.RemainingSlots;

    console.log(price, maxCap)

    function validateQuantity() {
        const quantityInput = document.getElementById('quantity');
        let quantity = parseInt(quantityInput.value);

        // Ensure quantity is within the valid range
        if (quantity < 1) {
            quantity = 1;
        } else if (quantity > maxCap) {
            quantity = maxCap;
        }

        // Update the input value to ensure it's within the range
        quantityInput.value = quantity;

        // Calculate and display the amount
        calculateAmount(quantity);
    }

    function calculateAmount(quantity) {
        const amount = price * quantity;
        document.getElementById('Amount').innerText = amount;
    }

    // Initialize the amount on page load
    document.addEventListener('DOMContentLoaded', function () {
        validateQuantity();
    });

    
</script>




